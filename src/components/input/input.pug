
mixin input(options = {})
  -
    let {
      id = undefined,
      label = undefined,
      placeholder = undefined,
      type = "text",
      value = undefined,
      name = undefined,
      required = false,
      attributesObject = {},
      readonly = false,
      views = undefined,
      button = false
    } = options

  - let blockClass = ""
  - let inputClass = ""

  if (button)
    - blockClass += blockClass ? " input_with-button" : "input_with-button"  

  if (views)
    - const viewsForBlockClass = ["arrow_down"]
    - const viewsForInputClass = ["bottom_flat", "focused", "clickable"]
    each view in views
      if (viewsForBlockClass.includes(view))
        - blockClass += blockClass ? ` input_${view}` : `input_${view}`
      if (viewsForInputClass.includes(view))
        - inputClass += inputClass ? ` input__field_${view}` : `input__field_${view}`

  - let tag = button ? "form" : "div"
  - let blockAttributes = button ? {method: "post"} : "";

  #{tag}.input.js-input(class = blockClass)&attributes(blockAttributes)      

    - let inputType = type

    if (type === "date")
      - inputType = "text"
      - inputClass += inputClass ? ` js-input__field_date` : 'js-input__field_date'          
    
    label.input__label !{label}
      input.input__field.js-input__field(
        class = inputClass
        id = id
        type = inputType
        name = name
        placeholder = placeholder
        required = required
        value = value
        readonly = readonly
      )&attributes(attributesObject)
    if (button)
      button.input__submit-button(type = "submit")