//-
  options.type - тип дропдауна ('guests', 'facilities')
  options.label - заголовок (опционально)
  options.open - будет ли дропдаун сразу развёрнут (true/false, по умолчанию false)
  options.class - класс, который хотим примиксовать к .dropdown (не рекомендуется)
  
  options.adultsDefaultCount - кол-во взрослых по умолчанию
  options.adultsMinCount - минимальное кол-во взрослых
  options.adultsMaxCount - максимальное кол-во взрослых
  
  Аналогично для детей:
  options.childrenDefaultCount
  options.childrenMinCount
  options.childrenMaxCount
  
  Аналогично для младенцев:
  options.babiesDefaultCount
  options.babiesMinCount
  options.babiesMaxCount
  
  Аналогично для спален:
  options.bedroomsDefaultCount
  options.bedroomsMinCount
  options.bedroomsMaxCount
  
  Аналогично для кроватей:
  options.bedsDefaultCount
  options.bedsMinCount
  options.bedsMaxCount
  
  Аналогично для ванных комнат:
  options.bathroomsDefaultCount
  options.bathroomsMinCount
  options.bathroomsMaxCount
  
  options.attributes - любые атрибуты, которые хотим передать обертке .dropdown

include ../../components/button/button

mixin dropdown(options)
  - let classList = options.class
  - let outputClass = "input__input_cursor_pointer"
  if options.open
    - classList = classList + " dropdown_menu_open" 
    - outputClass = outputClass + " input__input_dropdown_open input__input_focused"
    
  - let items = [];
  - 
    if (options.type == "guests")
      items = [
        {
          label: "взрослые",
          defaultCount: options.adultsDefaultCount,
          minCount: options.adultsMinCount,
          maxCount: options.adultsMaxCount 
        },
        {
          label: "дети",
          defaultCount: options.childrenDefaultCount,
          minCount: options.childrenMinCount,
          maxCount: options.childrenMaxCount
        },
        {
          label: "младенцы",
          defaultCount: options.babiesDefaultCount,
          minCount: options.babiesMinCount,
          maxCount: options.babiesMaxCount
        }
      ]
    if (options.type == "facilities")
      items = [
        {
          label: "спальни",
          defaultCount: options.bedroomsDefaultCount,
          minCount: options.bedroomsMinCount,
          maxCount: options.bedroomsMaxCount 
        },
        {
          label: "кровати",
          defaultCount: options.bedsDefaultCount,
          minCount: options.bedsMinCount,
          maxCount: options.bedsMaxCount
        },
        {
          label: "ванные комнаты",
          defaultCount: options.bathroomsDefaultCount,
          minCount: options.bathroomsMinCount,
          maxCount: options.bathroomsMaxCount
        }
      ]
    

  .dropdown.js-dropdown(
    class = classList
    data-type = options.type
  )&attributes(options.attributes)
    .dropdown__output.js-dropdown__output
      +input({
        class: "input_arrow_down",
        type: "text",
        label: options.label,
        inputClass: outputClass,
        readonly: true
      })
    .dropdown__menu
      each item in items
        .dropdown__item.js-dropdown__item(
          data-default-count = item.defaultCount
          data-min-count = item.minCount
          data-max-count = item.maxCount
        )
          .dropdown__item-label= item.label
          button.dropdown__button-minus.js-dropdown__button-minus(
            type = "button"
          )= "-"
          input.dropdown__item-input.js-dropdown__item-input(
            value = item.defaultCount || item.minCount || 0
            readonly
          )
          button.dropdown__button-plus.js-dropdown__button-plus(
            type = "button"
          )= "+"   
      .dropdown__button-reset.js-dropdown__button-reset
        +button({
          text: "Очистить"
        })     
      .dropdown__button-apply.js-dropdown__button-apply  
        +button({
          text: "Применить"
        })