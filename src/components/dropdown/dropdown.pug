include ../../components/button/button

mixin dropdown(options)
  - let classList = options.class
  - let outputClass = "input__input_cursor_pointer"
  - if (options.open)
    - classList = classList + " dropdown_menu_open" 
    - outputClass = outputClass + " input__input_dropdown_open input__input_focused input__input_cursor_pointer"
    
  - let items = [];
  - 
    if (options.type == "guests")
      items = [
        {
          label: "взрослые",
          defaultCount: options.adultsDefaultCount,
          minCount: options.adultsMinCount,
          maxCount: options.adultsMaxCount 
        },
        {
          label: "дети",
          defaultCount: options.childrenDefaultCount,
          minCount: options.childrenMinCount,
          maxCount: options.childrenMaxCount
        },
        {
          label: "младенцы",
          defaultCount: options.babiesDefaultCount,
          minCount: options.babiesMinCount,
          maxCount: options.babiesMaxCount
        }
      ]
    if (options.type == "facilities")
      items = [
        {
          label: "спальни",
          defaultCount: options.bedroomsDefaultCount,
          minCount: options.bedroomsMinCount,
          maxCount: options.bedroomsMaxCount 
        },
        {
          label: "кровати",
          defaultCount: options.bedsDefaultCount,
          minCount: options.bedsMinCount,
          maxCount: options.bedsMaxCount
        },
        {
          label: "ванные комнаты",
          defaultCount: options.bathroomsDefaultCount,
          minCount: options.bathroomsMinCount,
          maxCount: options.bathroomsMaxCount
        }
      ]
    

  .dropdown.js-dropdown(
    class = classList
    data-type = options.type
  )&attributes(options.attributes)
    .dropdown__output.js-dropdown__output
      +input({
        class: "input_arrow_down",
        type: "text",
        label: options.label,
        required: options.required,
        inputClass: outputClass,
        readonly: true
      })
    .dropdown__menu
      each item in items
        .dropdown__item.js-dropdown__item(
          data-default-count = item.defaultCount
          data-min-count = item.minCount
          data-max-count = item.maxCount
        )
          .dropdown__item-label= item.label
          button.dropdown__button-minus.js-dropdown__button-minus= "-"
          input.dropdown__item-input.js-dropdown__item-input(
            value = item.defaultCount || 0
            readonly
          )
          button.dropdown__button-plus.js-dropdown__button-plus= "+"
      .dropdown__buttons
        .dropdown__button_reset
          +button({
            text: "Очистить"
          })
        .dropdown__button_apply  
          +button({
            text: "Применить"
          })
      
    
    
//-mixin dropdown(options)    
  .dropdown(class = options.wrapperClass)&attributes(options.attributes)
    label.h3= options.label
    .iqdropdown(class = options.class)
      p.iqdropdown-selection
      .iqdropdown-menu
        each item in options.items
          .iqdropdown-menu-option(
            data-id = item.id, 
            data-defaultcount = item.defaultcount, 
            data-mincount = item.mincount
          )
            div
              p.iqdropdown-item= item.text
        .dropdown__buttons(class = options.buttonsClass)
          +button({
            text: "Очистить",
            class: "dropdown__button dropdown__button_reset"
          })
          +button({
            text: "Применить",
            class: "dropdown__button dropdown__button_apply"
          })